{"ast":null,"code":"import axios from 'axios';\nimport toast from 'react-hot-toast';\n\n// Base API configuration\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// Create axios instance\nconst apiClient = axios.create({\n  baseURL: `${API_URL}/api`,\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napiClient.interceptors.request.use(config => {\n  const token = localStorage.getItem('bgp_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Response interceptor to handle errors\napiClient.interceptors.response.use(response => response.data, error => {\n  if (error.response) {\n    // Server responded with error status\n    const {\n      status,\n      data\n    } = error.response;\n    if (status === 401) {\n      // Unauthorized - clear token and redirect to login\n      localStorage.removeItem('bgp_token');\n      localStorage.removeItem('bgp_user');\n      window.location.href = '/login';\n    }\n\n    // Return the error data for handling\n    return Promise.reject(data);\n  } else if (error.request) {\n    // Network error\n    toast.error('Network error. Please check your connection.');\n    return Promise.reject({\n      message: 'Network error'\n    });\n  } else {\n    // Other error\n    toast.error('An unexpected error occurred.');\n    return Promise.reject({\n      message: 'Unexpected error'\n    });\n  }\n});\n\n// Authentication API\nexport const authAPI = {\n  login: credentials => apiClient.post('/auth/login', credentials),\n  logout: () => apiClient.post('/auth/logout'),\n  changePassword: passwords => apiClient.post('/auth/change-password', passwords),\n  refreshToken: token => apiClient.post('/auth/refresh-token', {\n    token\n  }),\n  setupAdmin: () => apiClient.post('/auth/setup-admin')\n};\n\n// Public API (no auth required)\nexport const publicAPI = {\n  registerMember: memberData => apiClient.post('/public/register', memberData),\n  health: () => apiClient.get('/public/health')\n};\n\n// Members API\nexport const membersAPI = {\n  getAll: (params = {}) => apiClient.get('/members', {\n    params\n  }),\n  getById: id => apiClient.get(`/members/${id}`),\n  create: memberData => apiClient.post('/members', memberData),\n  update: (id, memberData) => apiClient.put(`/members/${id}`, memberData),\n  delete: id => apiClient.delete(`/members/${id}`),\n  updateStatus: (id, status) => apiClient.patch(`/members/${id}/status`, {\n    status\n  })\n};\n\n// Admin API\nexport const adminAPI = {\n  getDashboard: () => apiClient.get('/admin/dashboard'),\n  getAnalytics: (range = '30days') => apiClient.get('/admin/analytics', {\n    params: {\n      range\n    }\n  }),\n  exportCSV: (status = 'all') => {\n    return apiClient.get('/admin/export/csv', {\n      params: {\n        status\n      },\n      responseType: 'blob'\n    });\n  },\n  exportExcel: (status = 'all') => {\n    return apiClient.get('/admin/export/excel', {\n      params: {\n        status\n      },\n      responseType: 'blob'\n    });\n  },\n  getActivityLogs: (params = {}) => apiClient.get('/admin/activity-logs', {\n    params\n  }),\n  bulkUpdateStatus: (memberIds, status) => apiClient.post('/admin/bulk-update-status', {\n    memberIds,\n    status\n  })\n};\n\n// Utility functions for file downloads\nexport const downloadFile = (blob, filename) => {\n  const url = window.URL.createObjectURL(new Blob([blob]));\n  const link = document.createElement('a');\n  link.href = url;\n  link.setAttribute('download', filename);\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n  window.URL.revokeObjectURL(url);\n};\n\n// Health check function\nexport const checkAPIHealth = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/health`);\n    return response.data;\n  } catch (error) {\n    throw new Error('API is not responding');\n  }\n};\n\n// Export the configured axios instance for custom requests\nexport default apiClient;","map":{"version":3,"names":["axios","toast","API_URL","process","env","REACT_APP_API_URL","apiClient","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","data","status","removeItem","window","location","href","message","authAPI","login","credentials","post","logout","changePassword","passwords","refreshToken","setupAdmin","publicAPI","registerMember","memberData","health","get","membersAPI","getAll","params","getById","id","update","put","delete","updateStatus","patch","adminAPI","getDashboard","getAnalytics","range","exportCSV","responseType","exportExcel","getActivityLogs","bulkUpdateStatus","memberIds","downloadFile","blob","filename","url","URL","createObjectURL","Blob","link","document","createElement","setAttribute","body","appendChild","click","removeChild","revokeObjectURL","checkAPIHealth","Error"],"sources":["/Users/sherimcdowell/Desktop/VScode Projects/APP-Creations/BGP_Members_Management/BGP_Members_Management/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\nimport toast from 'react-hot-toast';\n\n// Base API configuration\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// Create axios instance\nconst apiClient = axios.create({\n  baseURL: `${API_URL}/api`,\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napiClient.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('bgp_token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Response interceptor to handle errors\napiClient.interceptors.response.use(\n  (response) => response.data,\n  (error) => {\n    if (error.response) {\n      // Server responded with error status\n      const { status, data } = error.response;\n      \n      if (status === 401) {\n        // Unauthorized - clear token and redirect to login\n        localStorage.removeItem('bgp_token');\n        localStorage.removeItem('bgp_user');\n        window.location.href = '/login';\n      }\n      \n      // Return the error data for handling\n      return Promise.reject(data);\n    } else if (error.request) {\n      // Network error\n      toast.error('Network error. Please check your connection.');\n      return Promise.reject({ message: 'Network error' });\n    } else {\n      // Other error\n      toast.error('An unexpected error occurred.');\n      return Promise.reject({ message: 'Unexpected error' });\n    }\n  }\n);\n\n// Authentication API\nexport const authAPI = {\n  login: (credentials) => apiClient.post('/auth/login', credentials),\n  logout: () => apiClient.post('/auth/logout'),\n  changePassword: (passwords) => apiClient.post('/auth/change-password', passwords),\n  refreshToken: (token) => apiClient.post('/auth/refresh-token', { token }),\n  setupAdmin: () => apiClient.post('/auth/setup-admin')\n};\n\n// Public API (no auth required)\nexport const publicAPI = {\n  registerMember: (memberData) => apiClient.post('/public/register', memberData),\n  health: () => apiClient.get('/public/health')\n};\n\n// Members API\nexport const membersAPI = {\n  getAll: (params = {}) => apiClient.get('/members', { params }),\n  getById: (id) => apiClient.get(`/members/${id}`),\n  create: (memberData) => apiClient.post('/members', memberData),\n  update: (id, memberData) => apiClient.put(`/members/${id}`, memberData),\n  delete: (id) => apiClient.delete(`/members/${id}`),\n  updateStatus: (id, status) => apiClient.patch(`/members/${id}/status`, { status })\n};\n\n// Admin API\nexport const adminAPI = {\n  getDashboard: () => apiClient.get('/admin/dashboard'),\n  getAnalytics: (range = '30days') => apiClient.get('/admin/analytics', { params: { range } }),\n  exportCSV: (status = 'all') => {\n    return apiClient.get('/admin/export/csv', {\n      params: { status },\n      responseType: 'blob'\n    });\n  },\n  exportExcel: (status = 'all') => {\n    return apiClient.get('/admin/export/excel', {\n      params: { status },\n      responseType: 'blob'\n    });\n  },\n  getActivityLogs: (params = {}) => apiClient.get('/admin/activity-logs', { params }),\n  bulkUpdateStatus: (memberIds, status) => \n    apiClient.post('/admin/bulk-update-status', { memberIds, status })\n};\n\n// Utility functions for file downloads\nexport const downloadFile = (blob, filename) => {\n  const url = window.URL.createObjectURL(new Blob([blob]));\n  const link = document.createElement('a');\n  link.href = url;\n  link.setAttribute('download', filename);\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n  window.URL.revokeObjectURL(url);\n};\n\n// Health check function\nexport const checkAPIHealth = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/health`);\n    return response.data;\n  } catch (error) {\n    throw new Error('API is not responding');\n  }\n};\n\n// Export the configured axios instance for custom requests\nexport default apiClient;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}